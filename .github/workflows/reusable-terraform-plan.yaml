---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Reusable - Terraform Plan

on:
  workflow_call:
    inputs:
      terraform-version:
        type: string
        description: The Terraform version to use.
        required: false
        default: "1.10.5"
      working-directory:
        type: string
        description: The directory to lint.
        required: false
        default: "."

env:
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  GIT_USERNAME: mr-borboto
  TF_BACKEND_HTTP_ENCRYPTION_PROVIDER: sops
  TF_BACKEND_HTTP_SOPS_PGP_FP: 60A6849DA8C872ED5E3803E3CAE4C9DA0D9FDDC0
  TF_BACKEND_GIT_GIT_AUTHOR: "mr-borboto[bot] <170036086+mr-borboto[bot]@users.noreply.github.com>"
  TF_BACKEND_GIT_GIT_COMMITPREFIX: "chore: "

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@0d564482f06ca65fa9e77e2510873638c82206f2 # v1.11.5
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Configure GPG Key
        run: echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Setup terraform-backend-git
        uses: plumber-cd/setup-terraform-backend-git@f7f5c241e02e73b4552dd412fdf7fcc05044873b # v1
        with:
          version: 0.1.8

      - name: Setup terraform-summarize
        uses: kishaningithub/setup-tf-summarize@b752490b135f74e59d82e656a1dab7f11a937f84 # v2

      - name: Start backend
        run: terraform-backend-git &

      - name: Terraform Init
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: terraform init

      - name: Terraform Plan
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        id: plan
        run: |
          terraform plan -out=tfplan -no-color -lock=false | tee plan.md
          {
            echo 'PLAN<<EOF'
            cat plan.md
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Summarize Plan
        id: summary
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: |
          tf-summarize -md tfplan | tee summary.md
          {
            echo 'SUMMARY<<EOF'
            cat summary.md
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Find Comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3
        id: fc
        with:
          token: "${{ steps.app-token.outputs.token }}"
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: Terraform Plan Summary

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        with:
          token: "${{ steps.app-token.outputs.token }}"
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            # Terraform Plan Summary

            mr-borboto ran a `terraform plan` on the code in this PR and this is the summary of those results:

            ${{ steps.summary.outputs.SUMMARY }}

            ## Click Below for the Full Plan Output

            <details>
            <summary>Full Plan Output</summary>

            ```txt
            ${{ steps.plan.outputs.PLAN }}
            ```

            </details>
