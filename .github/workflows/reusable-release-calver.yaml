---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Reusable - Release Calver

on:
  workflow_call:
    inputs:
      dry-run:
        type: boolean
        description: Dry Run
        default: false
        required: false

jobs:
  calver:
    runs-on: ubuntu-latest

    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@0d564482f06ca65fa9e77e2510873638c82206f2 # v1.11.5
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Create Release
        shell: bash
        env:
          GH_TOKEN: "${{ steps.app-token.outputs.token }}"
          DRY_RUN: "${{ inputs.dry-run == true }}"
        run: |
          # Retrieve previous release tag
          previous_tag="$(gh release list --limit 1 | awk '{ print $1 }')"

          # Extract major, minor and patch from tag
          previous_major="${previous_tag%%\.*}"
          previous_minor="${previous_tag#*.}"
          previous_minor="${previous_minor%.*}"
          previous_patch="${previous_tag##*.}"

          # Determine next release tag
          next_major_minor="$(date +'%Y').$(date +'%-m')"
          if [[ "${previous_major}.${previous_minor}" == "${next_major_minor}" ]]; then
              echo "Month release already exists for year, incrementing patch number by 1"
              next_patch="$((previous_patch + 1))"
          else
              echo "Month release does not exist for year, setting patch number to 0"
              next_patch="0"
          fi
          release_tag="${next_major_minor}.${next_patch}"

          # Create release
          if [[ "${DRY_RUN}" == "true" ]]; then
              echo "Dry run: gh release create ${release_tag} --repo=${GITHUB_REPOSITORY} --title=${release_tag} --generate-notes"
          else
              gh release create "${release_tag}" \
                  --repo="${GITHUB_REPOSITORY}" \
                  --title="${release_tag}" \
                  --generate-notes
          fi
